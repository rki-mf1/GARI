/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${meta.id}/${task.process.tokenize(':')[-1]}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        enabled: params.publish_dir_enabled
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: FASTP {
        cpus = 8
        memory = 10.GB
        time = 1.h

        ext.args = params.fastp_params

    }

    withName: SPADES {
        cpus = 12
        memory = 20.GB
        time = 2.h

        ext.args = params.spades_params

    }

    withName: SHOVILL {
        cpus = 12
        memory = 20.GB
        time = 2.h

        ext.args = params.shovill_params
    }

    withName: SKESA {
        cpus = 12
        memory = 20.GB
        time = 2.h

        ext.args = params.skesa_params
    }

    withName: ASSEMBLYSCAN {
        cpus = 2
        memory = 2.GB
        time = 1.h

        ext.args = params.assemblyscan_params
    }

    withName: SKANI_SEARCH {
        cpus = 12
        memory = 10.GB
        time = 1.h

        ext.args = params.skani_params
    }

    withName: BBMAP_ALIGN {
        cpus = 12
        memory = 20.GB
        time = 2.h
    }

    withName: BBMAP_RENAME {
        cpus = 1
        memory = 5.GB
        time = 1.h

        publishDir = [
            path: { "${params.outdir}/assemblies" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]       
    }

    withName: KRAKEN2_READ {
        cpus = 4
        memory = 10.GB
        time = 1.h
        ext.args = params.krakenR_params
    }

    withName: KRAKEN2_ASM {
        cpus = 4
        memory = 10.GB
        time = 1.h
        ext.args = params.krakenA_params
        
        publishDir = [
            path: { "${params.outdir}/${meta.id.split('-ASM')[0]}/${task.process.tokenize(':')[-1]}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.publish_dir_enabled
        ]
    }

    withName: STAT_SUMMARY {
        cpus = 1
        memory = 1.GB
        time = 1.h
        
        publishDir = [
            path: { "${params.outdir}/QC_reports" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: STAT_SUMMARY_QC {
        cpus = 1
        memory = 1.GB
        time = 1.h
        
        publishDir = [
            path: { "${params.outdir}/QC_reports" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: CREATE_REPORT {
        cpus = 1
        memory = 1.GB
        time = 1.h
        
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }
    
}
